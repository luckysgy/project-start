
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

stream {
    log_format proxy '$remote_addr [$time_local] '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time "$upstream_addr" '
                 '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log /mnt/tcp-access.log proxy ;
    open_log_file_cache off;
    include tcpConf/*.conf;
    server {
        listen  60000;
        proxy_pass am-bp1grlpm6yddoan1990650o.ads.aliyuncs.com:3306;
    }

}



rtmp {
    server {
        listen ${ed.nginx.play.rtmpPort};

        application live {
            live on;
        }

        application video {
            live on;
            gop_cache on;
            record off;
        }
        application dash  {
    			live on;
    			dash on;
    			dash_path /usr/local/nginx/html/dash;
    		}
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # 上传文件的大小限制  默认1m
	client_max_body_size 100m;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	upstream video.com {
		server ${ed.nginx.web.video.host}:${ed.nginx.web.video.port};
	}

	upstream video.structured.com {
		server ${ed.nginx.web.videoStructured.host}:${ed.nginx.web.videoStructured.port};
	}
   	 upstream video.disposition.com {
		server ${ed.nginx.web.disposition.host}:${ed.nginx.web.disposition.port};
	}
	server {
		 listen  ${port.proxy.web};

		 # dns resolver used by forward proxying
		 resolver  114.114.114.114;

		 location ${ed.nginx.web.video.urlPre} {

			proxy_pass http://video.com;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # http1.1 to websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
			proxy_redirect default;
		 }

		 location ${ed.nginx.web.videoStructured.urlPre} {

			proxy_pass http://video.structured.com;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # http1.1 to websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
			proxy_redirect default;
		 }

         location ${ed.nginx.web.disposition.urlPre} {

            proxy_pass http://video.disposition.com;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_redirect default;
        }
	 }

	 server {
        listen      ${ed.nginx.play.flvPort};
        location /live {
            add_header 'Access-Control-Allow-Methods' '*';
			      add_header 'Access-Control-Allow-Origin' '*';
            flv_live on;
            chunked_transfer_encoding on;
        }
    }


}


